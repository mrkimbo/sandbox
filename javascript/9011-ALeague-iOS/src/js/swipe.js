/**
 * Created with PhpStorm.
 * User: kimh
 * Date: 25/11/13
 * Time: 12:50 PM
 */

Hammer(
  document.body,{
    drag_max_touches: 1,
    drag_block_vertical: true,
    drag_lock_to_axis: true
  }
).on('release dragleft dragright swipeleft swiperight',handleTouchEvent);


function redrawPages(evt)
{
  var pages = document.querySelectorAll('.page');
  var w = Math.round(mainDiv.clientWidth*.95), i = pages.length;
  page = new Rect(w,pages[0].clientHeight);
  container.style.width = content.style.width = (w*pages.length)+1 + 'px';
  while(i--){
    if(parseInt(pages[i].id.replace(/[^0-9]*/g,''))%totalPages == 0){
      pages[i].style.width = mainDiv.clientWidth + 'px';
      continue;
    }
    pages[i].style.width = w + 'px';
  }
  setDragPos(0);
}

/**
 * Handle events generated by Hammer.js
 * @param {Object} evt Event Object
 */
function handleTouchEvent(evt)
{
  // disable default browser scrolling //
  evt.gesture.preventDefault();

  //log(evt.type);
  switch(evt.type)
  {
    case 'dragleft':
    case 'dragright':
      setDragPos(evt.gesture.deltaX, evt.gesture.direction);
      break;

    case 'swipeleft':
      next();
      evt.gesture.stopDetect();
      break;

    case 'swiperight':
      prev();
      evt.gesture.stopDetect();
      break;

    case 'release':
      if(Math.abs(evt.gesture.deltaX) > (page.width*.3)) {
        (evt.gesture.direction == Hammer.DIRECTION_LEFT) ? next() : prev();
      }
      else {
        cancelDrag();
      }
      break;
  }
}

function next()
{
  if(idx==3) idx = 2;
  container.addEventListener('webkitTransitionEnd',onTransitionEnd,false);
  container.className = content.className = 'animate';
  setPageX(page.width*(++idx)*-1);
}

function prev()
{
  if(idx==0) idx = 1;
  container.addEventListener('webkitTransitionEnd',onTransitionEnd,false);
  container.className = content.className = 'animate';
  setPageX(page.width*(--idx)*-1);
}

function cancelDrag()
{
  container.addEventListener('webkitTransitionEnd',onTransitionEnd,false);
  container.className = content.className = 'animate';
  setPageX(page.width*idx*-1);
}

/**
 * Update page position whilst dragging.
 * @param {number} deltaX Amount moved since first touch (+/-).
 */
function setDragPos(deltaX, direction)
{
  container.className = content.className = '';
  container.clientWidth;

  var x, px;
  px = (100/page.width) * deltaX;

  x = (page.width/100) * px;
  x = Math.max(-page.width,Math.min(page.width, x));

  // slow down at the first and last page //
  if((idx == 0 && direction == Hammer.DIRECTION_RIGHT) ||
    (idx == totalPages-1 && direction == Hammer.DIRECTION_LEFT)) {
    x *= .4;
  }

  setPageX((page.width*idx*-1) + x);

  //log(rotator._container.style.left);
}

function setPageX(v)
{
  if(!transformProp) transformProp = getTransformProp();
  container.style[transformProp] = content.style[transformProp] =
    'translate3d('+ v +'px,0,0) scale3d(1,1,1)';

  interruptAnim();
}

