/**
 * User: kimh
 * Date: 22/11/13
 * Time: 2:40 PM
 */

'use strict';

var idx = 0, destX = 0, totalPages = 4;
var page, container;
var tabTimeout;

function init()
{
  var el = document.querySelectorAll('.page')[0];
  page = new Rect(el.clientWidth,el.clientHeight);
  container = document.querySelector('#page-container');
}

function animatePageTabs()
{
  var tab = currentPage().querySelector('.page-tab');
  tab.style.backgroundPosition =
    (getComputedStyle(tab).backgroundPosition.substr(0,4) == '100%') ?
    '-70% 0' : '100% 0';

  tabTimeout = setTimeout(animatePageTabs,3000);
}

function currentPage()
{
  return document.querySelector('#page' + idx);
}

//animatePageTabs();

// ToDo: Update to use translate for page-container movement //


Hammer(document.body,{
  drag_max_touches: 1,
  drag_block_vertical: true,
  drag_lock_to_axis: true
}).on(
  'release dragleft dragright swipeleft swiperight',
  handleTouchEvent
);

/**
 * Handle events generated by Hammer.js
 * @param {Object} evt Event Object
 */
function handleTouchEvent(evt)
{
  // disable default browser scrolling //
  evt.gesture.preventDefault();

  //log(evt.type);
  switch(evt.type)
  {
    case 'dragleft':
    case 'dragright':
      setDragPos(evt.gesture.deltaX, evt.gesture.direction);
      break;

    case 'swipeleft':
      next();
      evt.gesture.stopDetect();
      break;

    case 'swiperight':
      prev();
      evt.gesture.stopDetect();
      break;

    case 'release':
      if(Math.abs(parseInt(
        container.style.left.replace(/px$/,''))%page.width) > (page.width*.3))
      {
        (evt.gesture.direction == Hammer.DIRECTION_LEFT) ? next() : prev();
      }
      else {
        cancelDrag();
      }
      break;
  }
}

function next()
{
  if(idx==3) return;
  container.className = 'animate';
  container.style.left = (page.width*(++idx)*-1) + 'px';
}

function prev()
{
  if(idx==0) return;
  container.className = 'animate';
  container.style.left = (page.width*(--idx)*-1) + 'px';
}

function cancelDrag()
{
  container.className = 'animate';
  container.style.left = (page.width*idx*-1) + 'px';
}

/**
 * Update slider position whilst dragging.
 * @param {number} deltaX Amount moved since first touch (+/-).
 */
function setDragPos(deltaX, direction)
{
  container.className = '';

  var x, px;
  px = (100/page.width) * deltaX;

  x = (page.width/100) * px;
  x = Math.max(-page.width,Math.min(page.width, x));

  // slow down at the first and last page //
  if((idx == 0 && direction == Hammer.DIRECTION_RIGHT) ||
    (idx == totalPages-1 && direction == Hammer.DIRECTION_LEFT)) {
    x *= .4;
  }

  container.style.left = (page.width*idx*-1) + x + 'px';

  //log(rotator._container.style.left);
}
